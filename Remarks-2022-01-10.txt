3 - ООП
- Это не исправил: неверная очередность модификаторов при написании методов
override protected bool - так не пишут
     
- много варнингов в классах .. исправляй по предложениям решарпера. Много не используемых using. Вызовы :base лишние и т.п.
- используй CamelCase стиль везде. В enum своем забыл исправить.
   -- исправлено 
4 - ValRef
- Quadrat - не называй никогда ничего таким корявым транслитом )  -- Почему? Как нужно было назвать квадрат лучше, чем Quadrat? 
            

- что будет если в методе CalculateRectangleArea убрать ref ?  -- немного изменил имплементацию с целью продемонстриривать действие ref

5 - Cast
- тут мне че-то не нравится как сделано. Зачем в наследниках тебе тоже самое свойство, что и у базового класса? 
Переделай на автосвойства, т.к. у тебя дублируется логика твоих полей с тем, что и так под капотом делают свойства.
 Если у тебя будет свойство в базовом классе, то оно будет доступно у всех наследников и каст для получения UnitsPerUsd по сути не нужен был бы.
В общем почитай еще на эту тему немного и переделай задание
-- упростил имплементацию, но каст все равно нужен. Без каста UnitsPerUsd будет всегда возвращать 0, 
   потому что передается переменная типа Currency. А смысл переменной _unitsPerUsd в том чтобы упростить 
   имплементацию. Иначе нам пришлось бы в каждой валюте присваивать соответствующим полям значения обменного курса, 
   например Лея к Гривне, Лея к Рублю и т.д. При наличии единого поля - соотношеня данной валюты к доллару  
   нам достаточно присвоить значение только этому полю, и мы можем конвертировать любую валюту в любую другую.

6 - Boxing
- вроде норм, но тот же совет насчет var
 -- применил вар

7 - Enumerables
- норм

8 - LINQ
- внутри методов LINQ используй наименования параметров с маленькой буквы , решарпер подсказывает тебе это.
- не вижу чтобы сгенерил 100 элементов ;)
 -- сгенерировал 100 элементов, применил переменную  var, упрстил сократил

9 - IComparableInterface
- в методе Compare перед работой с переменными необходимо проверить их на null
- почитай насчет сравнения float типов. В том же методе у тебя подсказка на 14 строке
- насчет инициализации массивов посмотри в методе main, там можно упростить и сократить
- также не забывай про var везде .. в циклах тоже
 -- применил примечания

10 - EqualsGetHashCode
- норм

